<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyr.dao.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.lyr.model.UserInfo">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_role" jdbcType="VARCHAR" property="userRole" />
    <result column="user_check" jdbcType="INTEGER" property="userCheck" />
    <result column="user_register_time" jdbcType="INTEGER" property="userRegisterTime" />
    <result column="user_status" jdbcType="INTEGER" property="userStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_password, user_role, user_check, user_register_time, user_status
  </sql>
  
  <!--根据user_id查用户  -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from UserInfo
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  
  <!-- 根据user_id删除用户 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from UserInfo
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  
  <!--注册用户  -->
  <insert id="insert" parameterType="com.lyr.model.UserInfo" useGeneratedKeys="true"  keyProperty="user_id">
    insert into UserInfo ( user_name, user_password, 
      user_role, user_check,  
      user_status)
    values ( #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userRole,jdbcType=VARCHAR}, #{userCheck,jdbcType=INTEGER}, 
      #{userStatus,jdbcType=INTEGER})
  </insert>
  
  <!-- 插入 -->
  <insert id="insertSelective" parameterType="com.lyr.model.UserInfo">
    insert into UserInfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userRole != null">
        user_role,
      </if>
      <if test="userCheck != null">
        user_check,
      </if>
      <if test="userRegisterTime != null">
        user_register_time,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        #{userRole,jdbcType=VARCHAR},
      </if>
      <if test="userCheck != null">
        #{userCheck,jdbcType=INTEGER},
      </if>
      <if test="userRegisterTime != null">
        #{userRegisterTime,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <!--  更新老用户信息-->
  <update id="updateByPrimaryKeySelective" parameterType="com.lyr.model.UserInfo">
    update UserInfo
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        user_role = #{userRole,jdbcType=VARCHAR},
      </if>
      <if test="userCheck != null">
        user_check = #{userCheck,jdbcType=INTEGER},
      </if>
      <if test="userRegisterTime != null">
        user_register_time = #{userRegisterTime,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
  <!-- 更新新用户信息 -->
  <update id="updateByPrimaryKey" parameterType="com.lyr.model.UserInfo">
    update UserInfo
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_role = #{userRole,jdbcType=VARCHAR},
      user_check = #{userCheck,jdbcType=INTEGER},
      user_register_time = #{userRegisterTime,jdbcType=INTEGER},
      user_status = #{userStatus,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
  <!-- 删除用户 -->
  <delete id="deleteByUserName" parameterType="java.lang.String">
  delete from UserInfo
  where user_Name=#{userName,jdbcType=VARCHAR}  
  </delete>
  
  <!-- 根据用户名查询用户 -->
  <select id="selectByUserName"  parameterType="java.lang.String" resultMap="BaseResultMap">
  	select
  <include refid="Base_Column_List" />
  	from UserInfo
  	where user_name=#{userName,jdbcType=VARCHAR}
  </select>
  
  <!-- 更改用户状态 -->
  <update id="updateUserCheckByUserId" parameterType="com.lyr.model.UserInfo">
		update UserInfo
		set user_check = #{userCheck,jdbcType=INTEGER}
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	
	<!-- 查询所有用户 -->
	<select id="selectUser" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from UserInfo
		order by user_id 
	</select>
	
	
  
  
  
  
  
</mapper>