<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lx.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.lx.model.UserInfo" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="user_role" property="userRole" jdbcType="VARCHAR" />
    <result column="user_check" property="userCheck" jdbcType="INTEGER" />
    <result column="user_register_time" property="userRegisterTime" jdbcType="INTEGER" />
    <result column="user_status" property="userStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_name, user_password, user_role, user_check, user_register_time, user_status
  </sql>

  <!--**********用于处理一些业务逻辑的方法**********-->
  <update id="updateUsersCheck">
  	UPDATE UserInfo set user_check = '1' where user_name in
  		<foreach collection="userNames" item="userName" index="index" open="(" close=")" separator=",">
  			#{userName}
  		</foreach>
  </update>
  <select id="checkLogin" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from UserInfo 
    where user_name = #{userName,jdbcType=VARCHAR} limit 1
  </select>
  <select id="selectUserByIsPass" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	select user_name, user_register_time 
  	from UserInfo 
  	where user_check = #{checkType,jdbcType=INTEGER}
  </select>
  <select id="selectAllUserInfoByLikeUserName" resultMap="BaseResultMap">
  	select user_name from UserInfo where user_name like CONCAT(CONCAT('%',#{userName},'%')) and user_check = '1'
  </select>
  <delete id="deleteByUserName" parameterType="java.lang.String">
  	delete from UserInfo where user_name = #{userName,jdbcType=VARCHAR}
  </delete>
  <update id="updateUserPassword">
  	update UserInfo set user_password = #{newPwd,jdbcType=VARCHAR} 
  	where user_name = #{userName,jdbcType=VARCHAR} 
  </update>

  <!--**********用于获取一些智能下拉提示**********-->
  <select id="getUserNames" resultType="java.lang.String" parameterType="java.lang.String">
  	select user_name from UserInfo where user_name like CONCAT(CONCAT(#{user_name},'%'))
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from UserInfo
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from UserInfo
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lx.model.UserInfo" >
    insert into UserInfo (user_id, user_name, user_password, 
      user_role, user_check, user_register_time, 
      user_status)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userRole,jdbcType=VARCHAR}, #{userCheck,jdbcType=INTEGER}, #{userRegisterTime,jdbcType=INTEGER}, 
      #{userStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lx.model.UserInfo" >
    insert into UserInfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
      <if test="userRole != null" >
        user_role,
      </if>
      <if test="userCheck != null" >
        user_check,
      </if>
      <if test="userRegisterTime != null" >
        user_register_time,
      </if>
      <if test="userStatus != null" >
        user_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null" >
        #{userRole,jdbcType=VARCHAR},
      </if>
      <if test="userCheck != null" >
        #{userCheck,jdbcType=INTEGER},
      </if>
      <if test="userRegisterTime != null" >
        #{userRegisterTime,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null" >
        #{userStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lx.model.UserInfo" >
    update UserInfo
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null" >
        user_role = #{userRole,jdbcType=VARCHAR},
      </if>
      <if test="userCheck != null" >
        user_check = #{userCheck,jdbcType=INTEGER},
      </if>
      <if test="userRegisterTime != null" >
        user_register_time = #{userRegisterTime,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null" >
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lx.model.UserInfo" >
    update UserInfo
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_role = #{userRole,jdbcType=VARCHAR},
      user_check = #{userCheck,jdbcType=INTEGER},
      user_register_time = #{userRegisterTime,jdbcType=INTEGER},
      user_status = #{userStatus,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>