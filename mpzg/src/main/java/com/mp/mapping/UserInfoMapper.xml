<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mp.dao.UserInfoMapper">
	<resultMap id="BaseResultMap" type="com.mp.model.UserInfo">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_realname" property="userRealname"
			jdbcType="VARCHAR" />
		<result column="user_email" property="userEmail" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="INTEGER" />
		<result column="user_telephone_number" property="userTelephoneNumber"
			jdbcType="VARCHAR" />
		<result column="user_role" property="userRole" jdbcType="VARCHAR" />
		<result column="user_password" property="userPassword"
			jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		user_id, user_name, user_realname, user_email, sex,
		user_telephone_number,
		user_role,
		user_password
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user_info
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		user_info
		where user_id = #{userId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.mp.model.UserInfo">
		insert into user_info
		(user_id, user_name, user_realname,
		user_email, sex,
		user_telephone_number,
		user_role, user_password)
		values
		(#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
		#{userRealname,jdbcType=VARCHAR},
		#{userEmail,jdbcType=VARCHAR},
		#{sex,jdbcType=INTEGER}, #{userTelephoneNumber,jdbcType=VARCHAR},
		#{userRole,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.mp.model.UserInfo">
		insert into user_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="userRealname != null">
				user_realname,
			</if>
			<if test="userEmail != null">
				user_email,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="userTelephoneNumber != null">
				user_telephone_number,
			</if>
			<if test="userRole != null">
				user_role,
			</if>
			<if test="userPassword != null">
				user_password,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="userRealname != null">
				#{userRealname,jdbcType=VARCHAR},
			</if>
			<if test="userEmail != null">
				#{userEmail,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=INTEGER},
			</if>
			<if test="userTelephoneNumber != null">
				#{userTelephoneNumber,jdbcType=VARCHAR},
			</if>
			<if test="userRole != null">
				#{userRole,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				#{userPassword,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.mp.model.UserInfo">
		update user_info
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userRealname != null">
				user_realname = #{userRealname,jdbcType=VARCHAR},
			</if>
			<if test="userEmail != null">
				user_email = #{userEmail,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=INTEGER},
			</if>
			<if test="userTelephoneNumber != null">
				user_telephone_number =
				#{userTelephoneNumber,jdbcType=VARCHAR},
			</if>
			<if test="userRole != null">
				user_role = #{userRole,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				user_password = #{userPassword,jdbcType=VARCHAR},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.mp.model.UserInfo">
		update user_info
		set user_name = #{userName,jdbcType=VARCHAR},
		user_realname =
		#{userRealname,jdbcType=VARCHAR},
		user_email =
		#{userEmail,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=INTEGER},
		user_telephone_number = #{userTelephoneNumber,jdbcType=VARCHAR},
		user_role = #{userRole,jdbcType=VARCHAR},
		user_password =
		#{userPassword,jdbcType=VARCHAR}
		where user_id =
		#{userId,jdbcType=INTEGER}
	</update>

	<!--按用户名查找用户 -->
	<select id="selectByUserName" resultMap="BaseResultMap">
		select
		*
		from user_info
		where user_name=#{username}
	</select>

	<!--按id查找密码 -->
	<select id="selectPswById" resultMap="BaseResultMap">
		select
		*
		from user_info
		where
		user_id=#{userId}
	</select>
	<!-- 修改密码 -->
	<update id="updateUserPswById" parameterType="com.mp.model.UserInfo">
		update user_info
		<set>
			<if test="userPassword != null">
				user_password = #{userPassword,jdbcType=VARCHAR},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>

	<!-- 查找分页显示 -->
	<select id="findAllUserManageInfoPerPage" resultMap="BaseResultMap">
		SELECT *
		FROM user_info
		order by
		user_id DESC
		limit #{begin}, #{size}
	</select>
	<select id="findAllUserManageInfoNum" resultType="java.lang.Integer">
		SELECT count(*)
		FROM user_info
		order by
		user_id DESC
	</select>

</mapper>